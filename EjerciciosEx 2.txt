--EXAMEN SQL 2
--Sentencias para crear 5 tablas, debes crear las 2 restantes
create table cliente14(
    nif char(9) constraint cp_cliente14 primary key, 
    nombre varchar(40),
    telefono varchar(14), 
    email varchar(50)
);

create table tipo14(
    codtipo number(3) constraint cp_tipo14 primary key,
    comentario varchar(30), 
    descripcion varchar(50), 
    tarifadiaria number(3)
);

create table calendario14(
    fecha date constraint cp_calendario14 primary key
);

create table material14(
    codigo char(5) constraint cp_material14 primary key,
    estado varchar(10),
    tipo number(3)
);

create table proveedor(
    nif char(9) constraint cp_proveedor14 primary key, 
    nombre varchar(40),
    telefono varchar(14),
    email varchar(50)
);


--Ejercicio 1. Haz que la columna ESTADO de la tabla MATERIAL14 sólo admita los valores
--OPTIMO, NORMAL, GASTADO O PESIMO

alter table material14 modify estado constraint ch_estado check (estado in ('optimo', 'normal', 'gastado', 'pesimo')); 

--Ejercicio 2. Suponiendo que al crear la tabla CLIENTE se nos olvidó poner que la columna
--TELEFONO no admita nulos, ¿como lo harías una vez ya creada la tabla?

alter table cliente14 modify telefono not null;

--Ejercicio 3. Dado un CODIGO de MATERIAL14 se debe devolver la TARIFADIARIA de ese material.
--Haciendo uso de excepciones se avisará si el código introducido no corresponde al de ningún
--material de la base de datos.
create or replace procedure ex2ej3(auxcod material14.codigo%type)is
auxtarifa tipo14.tarifadiaria%type;
auxcont number(1) := 0;
begin

    select tarifadiaria into auxtarifa from tipo14 t, material14 m
    where t.codtipo = m.tipo and m.codigo = auxcod;
    
exception
    when no_data_found then
        escribir('***NO HAY ESE MATERIAL***');
    
end;
set serveroutput on;
insert into material14 values('00001', 'optimo', 1);
exec ex2ej3('00001');








